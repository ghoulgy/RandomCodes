import os 
import pefile
import json

dlls_name = [
    "shell32.dll",
    "wininet.dll", 
    "advapi32.dll",
    "ntdll.dll",
    "user32.dll",
    "kernel32.dll"
    "msi.dll",
    # "ws2_32.dll",
    # "ole32.dll"
]

def custom_djb2_hash(func_name):
    val = 0x1505 
 
    inString = func_name
    for ch in inString:  
        val += (val << 5)  
        val &= 0xFFFFFFFF   
        val += ord(ch)
        val &= 0xFFFFFFFF  
        val ^= 0x14371426
  
    return val

dll_func_dict = {} 
x32_win_path = "C:\\Windows\\SysWOW64\\"

for dll_name in dlls_name:
    full_path = os.path.join(x32_win_path, dll_name)
    pe = pefile.PE(full_path)

    for exp in pe.DIRECTORY_ENTRY_EXPORT.symbols:
        if exp.name is not None:
            func_name = exp.name.decode()
            dll_func_dict[custom_djb2_hash(func_name)] = func_name

with open('data.json', 'w') as f:
    json.dump(dll_func_dict, f)
f.close()
