import pefile
import base64
from arc4 import ARC4
import re
import os

key = b"1670491607004543356898504"

def b64_rc4_crypt(enc_str):
    try:
        b64_dec_str = base64.b64decode(enc_str)
        cipher = ARC4(key)
        final_dec_str = cipher.decrypt(b64_dec_str)

    except:
        return False
    
    return final_dec_str


def read_rdata_section(file_path):
    try:
        pe = pefile.PE(file_path)
    
        for section in pe.sections:
            if section.Name.decode().strip('\x00') == '.rdata':
                rdata_data = section.get_data()
    
    except pefile.PEFormatError as e:
        print(f"Error parsing PE file: {e}")
    
        return None

    return rdata_data


if __name__ == '__main__'
    executor_file_path = os.path.dirname(os.path.realpath(__file__))
    file_path = os.path.join(executor_file_path, "00950000.bin")
    rdata_section_data = read_rdata_section(file_path)

    for splitted_data in rdata_section_data.split(b"\x00"):
        if re.search(rb"^[A-Za-z0-9+/=]+$", splitted_data):
            dec_str = b64_rc4_crypt(splitted_data)

            try:
                dec_str = dec_str.decode()
                if dec_str:
                    print(f"{splitted_data}: {dec_str}")
            
            except:
                continue
