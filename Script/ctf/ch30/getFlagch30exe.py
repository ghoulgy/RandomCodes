import codecs
import re
import base64
# a = [0xa3,0x91,0xfa,0x2a,0xac,0x22,0xd2,0x9,0x1b,0xdd,0xc,0xdd,0xe4,0x78,0x91,0x5a,0x18,0x16,0x8c,0x3c,0x4c,0xcc,0x7a,0xc3,0xb4,0x6f,0x1e,0x62,0x11,0xcb,0x5a,0xc5,0xc0,0x2d,0x2f,0x96,0x3c,0x4f,0xab,0xa7,0xad,0x52,0x66,0xd8,0x66,0xc5,0x29,0x9f,0x31,0x86,0x4c,0xb2,0x1a,0x2c,0xee,0x6b,0x3,0x26,0x24,0x81,0xa5,0x8f,0xb3,0x15]
# b = [0xf7,0xc7,0x8b,0x7b,0xed,0x63,0x9f,0x48,0x5a,0x9c,0x4d,0x98,0xa5,0x39,0xd0,0x1b,0x37,0x39,0xb4,0x7d,0xd,0x80,0x1d,0x82,0xf5,0x2e,0x5f,0x23,0x50,0x8a,0x1b,0x84,0x91,0x6c,0x6e,0xd7,0x7d,0xe,0xea,0xe6,0xec,0x13,0x27,0x99,0x27,0x84,0x68,0xde,0x70,0xc7,0xd,0xf3,0x5b,0x6d,0xaf,0x2a,0x42,0x67,0x65,0xc0,0xe4,0xce,0xf2,0x54]
def xor(a, b):
  c = a ^ b
  return c


regex1 = r"mov\s+DWORD\sPTR\s\[ebp-0x10\],"
regex2 = r"xor\s+al,"
regex3 = r"xor\s+eax,"

with open('opcodeFilteredCh30exe', 'r') as f:
  contents = f.read()

mov = []
xor = []
array = contents.split('\n')
for i, text in enumerate(array):
  m1 = re.search(regex1, text)
  if m1:  # Check for mov DWORD PTR [rbp-0x8],<any hex>
    if i != len(array)-1:
      m2 = re.search(regex1, array[i+1])
      if m2:
        xor.append(0x00)
      hexStr = re.sub(regex1,'', text)
      mov.append(int(hexStr, 16))

  elif 'xor' in text:
    m2 = re.search(regex2, text)
    m3 = re.search(regex3, text)
    if m2:  # Check for xor al,<any hex>
      hexStr = re.sub(regex2, '', text)
      xor.append(int(hexStr, 16))
    elif m3:  # Check for xor eax,<any hex>
      hexStr = re.sub(regex3, '', text)
      xor.append(int(hexStr, 16))

# print(len(mov))
# print(len(xor))
zipped = zip(mov, xor)
zipped = list(zipped)
# print(zipped)

flag = ''
for aa, bb in zipped:
  cc = aa ^ bb
  flag += chr(cc)

print(flag)
